parent.0 = koza.params

# the next four items are already defined in koza.params, but we
# put them here to be clear.

# We have one function set, of class GPFunctionSet
gp.fs.size = 1
gp.fs.0 = ec.gp.GPFunctionSet
# We'll call the function set "f0".
gp.fs.0.name = f0

# We have these functions in the function set.  They are:
gp.fs.0.size = 12
gp.fs.0.func.0 = actions.AddServerL1
gp.fs.0.func.0.nc = nc0
gp.fs.0.func.1 = actions.AddServerL2
gp.fs.0.func.1.nc = nc0
gp.fs.0.func.2 = actions.DeleteServerL1
gp.fs.0.func.2.nc = nc0
gp.fs.0.func.3 = actions.DeleteServerL2
gp.fs.0.func.3.nc = nc0
gp.fs.0.func.4 = actions.IncreaseDatabaseAThreads
gp.fs.0.func.4.nc = nc0
gp.fs.0.func.5 = actions.IncreaseDatabaseBThreads
gp.fs.0.func.5.nc = nc0
gp.fs.0.func.6 = actions.DecreaseDatabaseAThreads
gp.fs.0.func.6.nc = nc0
gp.fs.0.func.7 = actions.DecreaseDatabaseBThreads
gp.fs.0.func.7.nc = nc0
gp.fs.0.func.8 = actions.IncreaseQuality
gp.fs.0.func.8.nc = nc0
gp.fs.0.func.9 = actions.DecreaseQuality
gp.fs.0.func.9.nc = nc0
gp.fs.0.func.10 = actions.SequenceOperator
gp.fs.0.func.10.nc = nc2
gp.fs.0.func.11 = actions.IfThenElseOperator
gp.fs.0.func.11.nc = nc3

eval.problem = main.MultiValueRegression
eval.problem.data = main.StateData
generations = 5000

#allow ECJ to figure out the number of cores
breedthreads = auto
evalthreads = auto

#using multi-objective optimization instead of koza gp
#pop.subpop.0.species.fitness = ec.multiobjective.MultiObjectiveFitness
#pop.subpop.0.species.fitness.num-objectives = 3
#pop.subpop.0.species.fitness.maximize.0 = false
#pop.subpop.0.species.fitness.maximize.1 = false
#pop.subpop.0.species.fitness.maximize.2 = false

#pop.subpop.0.species.fitness.min = 0.0
#pop.subpop.0.species.fitness.max = 10000000000000000

